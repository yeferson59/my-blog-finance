---
// src/pages/index.astro
import HeroSection from "@/components/HeroSection.astro";
import FeaturedArticles from "@/components/FeaturedArticles.astro";
import TechnologySection from "@/components/TechnologySection.astro";
import FinanceSection from "@/components/FinanceSection.astro";
import AllPostsSection from "@/components/AllPostsSection.astro";
import NewsletterSection from "@/components/NewsletterSection.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import type Post from "@/interfaces/post";
import fetchApi from "@/lib/strapi";

let allPosts: Post[] = [];

try {
  allPosts = await fetchApi<Post[]>({
    endpoint:
      "articles?fields[0]=title&fields[1]=description&fields[2]=pubDate&fields[3]=featured&fields[4]=slug&populate[cover][fields]=formats&populate[category][fields]=name,slug&pagination[limit]=6",
    wrappedByKey: "data",
    method: "GET",
  });
} catch (error) {
  console.error("Error al obtener los artÃ­culos:", error);
}

Astro.response.headers.set(
  "cache-control",
  "public, max-age=0, must-revalidate",
);

const optimizedImageUrl = (url: string, width: number, height: number) =>
  `${url}?f_auto,q_auto,w_${width},h_${height}`;

const articles = allPosts.map((article) => ({
  ...article,
  coverUrl: {
    small: optimizedImageUrl(article.cover.formats.small.url, 500, 391),
  },
}));
---

<BaseLayout title="Inicio blog" imageUrl="" type="website">
  <HeroSection />
  <TechnologySection posts={articles} />
  <FinanceSection posts={articles} />
  <FeaturedArticles allPosts={articles} />
  <AllPostsSection posts={articles} />
  <NewsletterSection />
</BaseLayout>
