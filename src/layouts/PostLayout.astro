---
// src/layouts/PostLayout.astro
import BaseLayout from "./BaseLayout.astro";
import { Image } from "astro:assets";
import { formatDate } from "@/utils/date";
import type Author from "@/interfaces/author";
import { CommentSection } from "@/components/CommentSection";
import ScrollToTopButton from "@/components/ScrollToTopButton";
import TableOfContents from "@/components/TableOfContents";
import type Header from "@/interfaces/header";
import type { User } from "lucia";

interface Props {
  title: string;
  pubDate: Date;
  slug: string;
  author: Author;
  updatedDate?: Date;
  heroImage?: any;
  alt?: string;
  user: User | null; // Asegúrate de tipar esto correctamente según tu implementación de usuario
  headers: Header[];
}

const {
  title,
  pubDate,
  updatedDate,
  heroImage,
  alt,
  slug,
  author,
  user,
  headers,
} = Astro.props;
---

<BaseLayout title={title}>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
        {title}
      </h1>
      <div
        class="flex flex-col sm:flex-row sm:items-center text-gray-600 dark:text-gray-400 gap-4"
      >
        <time datetime={pubDate.toISOString()} class="text-sm"
          >{formatDate(pubDate)}</time
        >

        <div class="flex flex-wrap items-center gap-4">
          <div class="flex items-center gap-2">
            {
              author.avatar && (
                <img
                  src={author.avatar}
                  alt={`Avatar de ${author.name}`}
                  class="w-10 h-10 rounded-full object-cover shadow-md"
                />
              )
            }
            <p class="text-sm font-medium">{author.name}</p>
          </div>
        </div>

        {
          updatedDate && (
            <div class="text-sm">
              <span class="mr-2">Actualizado:</span>
              <time datetime={updatedDate.toISOString()}>
                {formatDate(updatedDate)}
              </time>
            </div>
          )
        }
      </div>
    </header>

    {
      heroImage && (
        <Image
          src={heroImage}
          alt={alt || "Hero image"}
          width={1200}
          height={600}
          class="rounded-lg shadow-md mb-8"
          transition:name={`img-${slug}`}
        />
      )
    }

    <div class="lg:flex lg:gap-8">
      <TableOfContents headers={headers} client:load />
      <div class="prose prose-lg dark:prose-invert max-w-none lg:flex-grow">
        <slot />
      </div>
    </div>

    <div class="mt-12 not-prose">
      <!-- Añadimos la clase 'not-prose' aquí -->
      <CommentSection client:load articleId={slug} user={user} />
    </div>
  </article>
  <ScrollToTopButton client:load />
</BaseLayout>
